spring:
  application:
    name: book-service
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
  kafka:
    bootstrap-servers: ${KAFKA_1},${KAFKA_2},${KAFKA_3}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 1
      acks: all
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        partitioner.class: org.apache.kafka.clients.producer.internals.DefaultPartitioner
        linger.ms: 100  # Điều chỉnh thời gian chờ đợi để tối ưu hóa batching
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      auto-offset-reset: earliest
  data:
    redis:
      port: 6379
      host: localhost
jwt:
  signer-key: ${JWT_SIGNING_KEY}
app:
  services:
    profile: ${PROFILE_URL}
server:
  port: 8080
application:
  api:
    prefix: /book
aws:
  access:
    key:
      id: ${AWS_ACCESS_KEY_ID}
  secret:
    access:
      key: ${AWS_SECRET_ACCESS_KEY}
  s3:
    region: ${AWS_S3_REGION}
    bucket:
      name: ${AWS_S3_BUCKET_NAME}