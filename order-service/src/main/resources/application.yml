spring:
  application:
    name: order-service

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers: ${KAFKA_1},${KAFKA_2},${KAFKA_3}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 1
      acks: all
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        partitioner.class: org.apache.kafka.clients.producer.internals.DefaultPartitioner
        linger.ms: 100
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      auto-offset-reset: earliest

server:
  port: 8080
application:
  api:
    prefix: /order